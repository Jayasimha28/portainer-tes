name: Generate Custom Values YAML and Push to Main using Ansible

permissions:
  contents: write  # Allow the workflow to push to the repository

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment (dev, staging, prod)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      version:
        description: 'Version to deploy'
        required: true
        default: '1.0.0'
      deployment_time:
        description: 'Time to deploy'
        required: false
        default: 'immediate'

jobs:
  generate_values:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout the repository
        uses: actions/checkout@v3

      # Step 2: Set up Python and install Ansible
      - name: Set up Python and install Ansible
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install Ansible
        run: |
          pip install ansible

      # Step 3: Generate the custom filename based on inputs
      - name: Generate custom filename
        id: generate_filename
        run: |
          echo "FILE_NAME=values-${{ github.event.inputs.environment }}-${{ github.event.inputs.version }}.yaml" >> $GITHUB_ENV

      # Step 4: Run Ansible Playbook to generate custom values.yaml
      - name: Generate custom values.yaml using Ansible
        run: |
          ansible-playbook playbook.yaml \
            -e "environment=${{ github.event.inputs.environment }}" \
            -e "version=${{ github.event.inputs.version }}" \
            -e "deployment_time=${{ github.event.inputs.deployment_time }}" \
            -e "output_file=${{ env.FILE_NAME }}"  # Pass custom file name

      # Step 5: Configure Git user
      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      # Step 6: Commit changes to the main branch
      - name: Commit and push custom values.yaml to main
        run: |
          git checkout main
          git pull origin main
          git add "${{ env.FILE_NAME }}"  # Add the custom file
          git commit -m "Generated ${{ env.FILE_NAME }} for environment ${{ github.event.inputs.environment }} and version ${{ github.event.inputs.version }}"
          git push origin main
