name: Generate and Commit Deployment YAML

# Grant write permissions to the workflow
permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment (dev, staging, prod)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      version:
        description: 'Version to deploy'
        required: true
        default: '1.0.0'
      deployment_time:
        description: 'Time to deploy'
        required: false
        default: 'immediate'

jobs:
  generate_deployment:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository to the runner
    - name: Checkout the repository
      uses: actions/checkout@v3

    # Step 2: Create the deployment.yaml file from inputs
    - name: Generate deployment.yaml file
      run: |
        echo "environment: ${{ github.event.inputs.environment }}" > deployment.yaml
        echo "version: ${{ github.event.inputs.version }}" >> deployment.yaml
        echo "deployment_time: ${{ github.event.inputs.deployment_time }}" >> deployment.yaml

    # Step 3: Configure git to commit the changes
    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    # Step 4: Commit the generated deployment.yaml
    - name: Commit deployment.yaml
      run: |
        git add deployment.yaml
        git commit -m "Generated deployment.yaml for environment ${{ github.event.inputs.environment }} and version ${{ github.event.inputs.version }}"

    # Step 5: Push the changes back to the main branch
    - name: Push changes to main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use GitHub token for authentication
      run: |
        git push origin main
